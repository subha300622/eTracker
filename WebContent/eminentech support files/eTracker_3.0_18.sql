CREATE TABLE  "ERM_FINE_PAID" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"USERID" NUMBER NOT NULL ENABLE, 
	"AMOUNT" NUMBER NOT NULL ENABLE, 
	"PAID_DATE" DATE NOT NULL ENABLE, 
	"COLLECTEDBY" NUMBER NOT NULL ENABLE, 
	"MODIFIEDON" DATE, 
	"MODIFIEDBY" NUMBER, 
	"COMMENTS" VARCHAR2(100) NOT NULL ENABLE, 
	"STATUS" VARCHAR2(20) NOT NULL ENABLE, 
	 CONSTRAINT "ERM_FINE_PAID_PK" PRIMARY KEY ("ID") ENABLE
   )
/

CREATE OR REPLACE TRIGGER  "BI_ERM_FINE_PAID" 
  before insert on "ERM_FINE_PAID"               
  for each row  
begin   
    select "ERM_FINE_PAID_SEQ".nextval into :NEW.ID from dual; 
end; 
/

 CREATE SEQUENCE   "ERM_FINE_PAID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT  BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE
/

ALTER TRIGGER  "BI_ERM_FINE_PAID" ENABLE
/

drop TABLE "ERM_FINE_PAYMENT_HISTORY"
/   

CREATE TABLE  "ERM_FINE_PAYMENT_HISTORY" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"PAYMENTID" NUMBER NOT NULL ENABLE, 
	"USERID" NUMBER NOT NULL ENABLE, 
	"AMOUNT" NUMBER(9,0) NOT NULL ENABLE, 
	"PAYMENT_DATE" DATE NOT NULL ENABLE, 
	"COLLECTEDBY" NUMBER NOT NULL ENABLE, 
	"COMMENTS" VARCHAR2(50) NOT NULL ENABLE, 
	"ADDEDON" TIMESTAMP (6), 
	"STATUS" VARCHAR2(20), 
	 CONSTRAINT "ERM_FINE_PAYMENT_HISTORY_PK" PRIMARY KEY ("ID") ENABLE
   )
/

drop SEQUENCE "ERM_FINE_PAYMENT_HISTORY_SEQ"
/   

 CREATE SEQUENCE   "ERM_FINE_PAYMENT_HISTORY_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE
/



CREATE OR REPLACE TRIGGER  "BI_ERM_FINE_PAYMENT_HISTORY" 
  before insert on "ERM_FINE_PAYMENT_HISTORY"               
  for each row  
begin   
    select "ERM_FINE_PAYMENT_HISTORY_SEQ".nextval into :NEW.ID from dual; 
end; 

/
ALTER TRIGGER  "BI_ERM_FINE_PAYMENT_HISTORY" ENABLE
/


alter table "ERM_FINE_PAID" modify
("AMOUNT" NUMBER(9,0) )
/ 