create or replace PROCEDURE BPM_SCENARIO_UPLOAD ( SCENARIO VARCHAR2, SP_ID NUMBER, CREATEDBY NUMBER,processType varchar2 ,SC_ID OUT NUMBER) IS
BEGIN
INSERT INTO BPM_SCENARIO(SCENARIO_ID,SCENARIO,SP_ID,CREATEDBY,CREATEDON,SC_TYPE) VALUES(BPM_SCENARIO_ID_SEQ.nextval,SCENARIO, SP_ID, CREATEDBY,SYSDATE,processType) RETURNING SCENARIO_ID INTO SC_ID;
END;
/
create or replace PROCEDURE BPM_VARIANT_UPLOAD ( VARIANT VARCHAR2,SCENARIO_ID NUMBER,LEAD_MODULE NUMBER,IMPACTED_MODULE NUMBER,CLASSIFICATION VARCHAR2,TYPE VARCHAR2,PRIORITY VARCHAR2,CREATEDBY NUMBER,processType VARCHAR2,VT_ID OUT NUMBER) IS 
BEGIN 
INSERT INTO BPM_VARIANT(VARIANT_ID,VARIANT,SCENARIO_ID,LEAD_MODULE,IMPACTED_MODULE,CLASSIFICATION,TYPE,PRIORITY, CREATEDBY,CREATEDON,VT_TYPE) VALUES(BPM_VARIANT_ID_SEQ.nextval,VARIANT, SCENARIO_ID,LEAD_MODULE,IMPACTED_MODULE,CLASSIFICATION,TYPE,PRIORITY,CREATEDBY,SYSDATE,processType) RETURNING VARIANT_ID INTO VT_ID;
END;
/
create or replace PROCEDURE BPM_TESTCASE_UPLOAD ( TESTCASE VARCHAR2, VARIANT_ID NUMBER, CREATEDBY NUMBER,processType VARCHAR2,TC_ID OUT NUMBER) IS
BEGIN
INSERT INTO BPM_TESTCASE(TESTCASE_ID,TESTCASE,VARIANT_ID,CREATEDBY,CREATEDON,TC_TYPE) VALUES(BPM_TESTCASE_ID_SEQ.nextval,TESTCASE , VARIANT_ID, CREATEDBY,SYSDATE,processType) RETURNING TESTCASE_ID INTO TC_ID;
END;
/
create or replace PROCEDURE BPM_TESTSTEP_UPLOAD ( TESTSTEP VARCHAR2, TESTCASE_ID NUMBER, CREATEDBY NUMBER, processType VARCHAR2,TS_ID OUT NUMBER) IS
BEGIN
INSERT INTO BPM_TESTSTEP(TESTSTEP_ID, TESTSTEP, TESTCASE_ID, CREATEDBY,CREATEDON,TS_TYPE) VALUES(BPM_TESTSTEP_ID_SEQ.nextval, TESTSTEP , TESTCASE_ID, CREATEDBY,SYSDATE,processType) RETURNING TESTSTEP_ID INTO TS_ID;
END;
/
alter table "MYQUERY" add
("SEARCH_TYPE" VARCHAR2(3) NULL)
/   
Update MyQuery set search_type='APM' where query_string not like 'Select distinct(ea.APPLICANT_ID)%'
/
Update MyQuery set search_type='ERM' where query_string like 'Select distinct(ea.APPLICANT_ID)%'
/
alter table "MYQUERY" modify
("SEARCH_TYPE" VARCHAR2(3) NOT NULL)
/   
